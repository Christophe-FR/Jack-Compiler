//bootstrap  @256D = A@SPM = D//call Sys.init 0@Sys.init$ret1D = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@5D = D - A@ARGM = D@SPD = M@LCLM = D@Sys.initD; JMP(Sys.init$ret1)// ------------ FILE : /Users/lutzc/Desktop/nand2tetris/projects/08/FunctionCalls/FibonacciElement/Main.vm ------------ //function Main.fibonacci 0(Main.fibonacci)//push argument 0@0D = A@ARGA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push constant 2@2D = A@SPA = MM = D@SPM = M + 1//lt  @SPM = M - 1A = MD = M@SPM = M - 1A = MD = M - DM = -1@label_5D; JLT@SPA = MM = 0(label_5)@SPM = M + 1//if-goto IF_TRUE @SPM = M - 1@SPA = MD = M@Main$IF_TRUED; JNE//goto IF_FALSE @Main$IF_FALSED; JMP//label IF_TRUE (Main$IF_TRUE)//push argument 0@0D = A@ARGA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//return  @LCLD = M@R13M = D@R13D = M@5A = D - AD = M@R14M = D@SPM = M - 1A = MD = M@ARGA = MM = D@ARGD = M@SPM = D + 1@R13D = M@1A = D - AD = M@THATM = D@R13D = M@1A = D - AD = M@THATM = D@R13D = M@2A = D - AD = M@THISM = D@R13D = M@3A = D - AD = M@ARGM = D@R13D = M@4A = D - AD = M@LCLM = D@R14A = MD; JMP//label IF_FALSE (Main$IF_FALSE)//push argument 0@0D = A@ARGA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push constant 2@2D = A@SPA = MM = D@SPM = M + 1//sub  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M -D@SPM = M + 1//call Main.fibonacci 1@Main.fibonacci$ret15D = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@6D = D - A@ARGM = D@SPD = M@LCLM = D@Main.fibonacciD; JMP(Main.fibonacci$ret15)//push argument 0@0D = A@ARGA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push constant 1@1D = A@SPA = MM = D@SPM = M + 1//sub  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M -D@SPM = M + 1//call Main.fibonacci 1@Main.fibonacci$ret19D = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@6D = D - A@ARGM = D@SPD = M@LCLM = D@Main.fibonacciD; JMP(Main.fibonacci$ret19)//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//return  @LCLD = M@R13M = D@R13D = M@5A = D - AD = M@R14M = D@SPM = M - 1A = MD = M@ARGA = MM = D@ARGD = M@SPM = D + 1@R13D = M@1A = D - AD = M@THATM = D@R13D = M@1A = D - AD = M@THATM = D@R13D = M@2A = D - AD = M@THISM = D@R13D = M@3A = D - AD = M@ARGM = D@R13D = M@4A = D - AD = M@LCLM = D@R14A = MD; JMP// ------------ FILE : /Users/lutzc/Desktop/nand2tetris/projects/08/FunctionCalls/FibonacciElement/Sys.vm ------------ //function Sys.init 0(Sys.init)//push constant 4@4D = A@SPA = MM = D@SPM = M + 1//call Main.fibonacci 1@Main.fibonacci$ret24D = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@6D = D - A@ARGM = D@SPD = M@LCLM = D@Main.fibonacciD; JMP(Main.fibonacci$ret24)//label WHILE (Sys$WHILE)//goto WHILE @Sys$WHILED; JMP