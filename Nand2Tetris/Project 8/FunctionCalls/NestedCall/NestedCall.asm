//bootstrap  @256D = A@SPM = D//call Sys.init 0@Sys.init$retD = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@5D = D - A@ARGM = D@SPD = M@LCLM = D@Sys.initD; JMP(Sys.init$ret)// ------------ FILE : /Users/lutzc/Desktop/nand2tetris/projects/08/FunctionCalls/NestedCall/Sys.vm ------------ //function Sys.init 0(Sys.init)//push constant 4000@4000D = A@SPA = MM = D@SPM = M + 1//pop pointer 0@SPM = M - 1A = MD = M@THISM = D//push constant 5000@5000D = A@SPA = MM = D@SPM = M + 1//pop pointer 1@SPM = M - 1A = MD = M@THATM = D//call Sys.main 0@Sys.main$retD = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@5D = D - A@ARGM = D@SPD = M@LCLM = D@Sys.mainD; JMP(Sys.main$ret)//pop temp 1@1D = A@5D = A + D@R13M = D@SPM = M - 1A = MD = M@R13A = MM = D//label LOOP (LOOP)//goto LOOP @LOOPD; JMP//function Sys.main 5(Sys.main)@0D = A@SPA = MM = D@SPM = M + 1@0D = A@SPA = MM = D@SPM = M + 1@0D = A@SPA = MM = D@SPM = M + 1@0D = A@SPA = MM = D@SPM = M + 1@0D = A@SPA = MM = D@SPM = M + 1//push constant 4001@4001D = A@SPA = MM = D@SPM = M + 1//pop pointer 0@SPM = M - 1A = MD = M@THISM = D//push constant 5001@5001D = A@SPA = MM = D@SPM = M + 1//pop pointer 1@SPM = M - 1A = MD = M@THATM = D//push constant 200@200D = A@SPA = MM = D@SPM = M + 1//pop local 1@1D = A@LCLA = MD = A + D@R13M = D@SPM = M - 1A = MD = M@R13A = MM = D//push constant 40@40D = A@SPA = MM = D@SPM = M + 1//pop local 2@2D = A@LCLA = MD = A + D@R13M = D@SPM = M - 1A = MD = M@R13A = MM = D//push constant 6@6D = A@SPA = MM = D@SPM = M + 1//pop local 3@3D = A@LCLA = MD = A + D@R13M = D@SPM = M - 1A = MD = M@R13A = MM = D//push constant 123@123D = A@SPA = MM = D@SPM = M + 1//call Sys.add12 1@Sys.add12$retD = A@SPA = MM = D@SPM = M + 1@LCLD = M@SPA = MM = D@SPM = M + 1@ARGD = M@SPA = MM = D@SPM = M + 1@THISD = M@SPA = MM = D@SPM = M + 1@THATD = M@SPA = MM = D@SPM = M + 1@SPD = M@6D = D - A@ARGM = D@SPD = M@LCLM = D@Sys.add12D; JMP(Sys.add12$ret)//pop temp 0@0D = A@5D = A + D@R13M = D@SPM = M - 1A = MD = M@R13A = MM = D//push local 0@0D = A@LCLA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push local 1@1D = A@LCLA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push local 2@2D = A@LCLA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push local 3@3D = A@LCLA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push local 4@4D = A@LCLA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//return  @LCLD = M@R13M = D@R13D = M@5A = D - AD = M@R14M = D@SPM = M - 1A = MD = M@ARGA = MM = D@ARGD = M@SPM = D + 1@R13D = M@1A = D - AD = M@THATM = D@R13D = M@1A = D - AD = M@THATM = D@R13D = M@2A = D - AD = M@THISM = D@R13D = M@3A = D - AD = M@ARGM = D@R13D = M@4A = D - AD = M@LCLM = D@R14A = MD; JMP//function Sys.add12 0(Sys.add12)//push constant 4002@4002D = A@SPA = MM = D@SPM = M + 1//pop pointer 0@SPM = M - 1A = MD = M@THISM = D//push constant 5002@5002D = A@SPA = MM = D@SPM = M + 1//pop pointer 1@SPM = M - 1A = MD = M@THATM = D//push argument 0@0D = A@ARGA = MA = A + DD = M@SPA = MM = D@SPM = M + 1//push constant 12@12D = A@SPA = MM = D@SPM = M + 1//add  @SPM = M - 1A = MD = M@SPM = M - 1A = MM = M +D@SPM = M + 1//return  @LCLD = M@R13M = D@R13D = M@5A = D - AD = M@R14M = D@SPM = M - 1A = MD = M@ARGA = MM = D@ARGD = M@SPM = D + 1@R13D = M@1A = D - AD = M@THATM = D@R13D = M@1A = D - AD = M@THATM = D@R13D = M@2A = D - AD = M@THISM = D@R13D = M@3A = D - AD = M@ARGM = D@R13D = M@4A = D - AD = M@LCLM = D@R14A = MD; JMP